"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.createSpore = void 0;
const lumos_1 = require("@ckb-lumos/lumos");
const helpers_1 = require("../../../helpers");
const spore_1 = require("../../joints/spore");
async function createSpore(props) {
    // Env
    const config = props.config;
    const indexer = new lumos_1.Indexer(config.ckbIndexerUrl, config.ckbNodeUrl);
    // Get TransactionSkeleton
    let txSkeleton = lumos_1.helpers.TransactionSkeleton({
        cellProvider: indexer,
    });
    // Create and inject a new spore cell, also inject cluster if exists
    const injectNewSporeResult = await (0, spore_1.injectNewSporeOutput)({
        sporeData: props.sporeData,
        toLock: props.toLock,
        txSkeleton,
        config,
    });
    txSkeleton = injectNewSporeResult.txSkeleton;
    // Inject needed capacity and pay fee
    const injectCapacityAndPayFeeResult = await (0, helpers_1.injectCapacityAndPayFee)({
        txSkeleton,
        changeAddress: props.changeAddress,
        fromInfos: props.fromInfos,
        fee: lumos_1.BI.from(0),
        config,
    });
    txSkeleton = injectCapacityAndPayFeeResult.txSkeleton;
    // Generate and inject spore id
    txSkeleton = (0, spore_1.injectSporeIds)({
        sporeOutputIndices: [injectNewSporeResult.outputIndex],
        txSkeleton,
        config,
    });
    return {
        txSkeleton,
        outputIndex: injectNewSporeResult.outputIndex,
        cluster: injectNewSporeResult.cluster,
    };
}
exports.createSpore = createSpore;
//# sourceMappingURL=createSpore.js.map