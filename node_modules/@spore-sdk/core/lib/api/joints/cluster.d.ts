import { OutPoint, PackedSince, Script } from '@ckb-lumos/base';
import { Cell, helpers, HexString } from '@ckb-lumos/lumos';
import { SporeConfig } from '../../config';
export interface ClusterDataProps {
    name: string;
    description: string;
}
export declare function injectNewClusterOutput(props: {
    txSkeleton: helpers.TransactionSkeletonType;
    clusterData: ClusterDataProps;
    toLock: Script;
    config: SporeConfig;
}): {
    txSkeleton: helpers.TransactionSkeletonType;
    outputIndex: number;
    hasId: boolean;
};
export declare function injectClusterIds(props: {
    txSkeleton: helpers.TransactionSkeletonType;
    clusterOutputIndices?: number[];
    config: SporeConfig;
}): helpers.TransactionSkeletonType;
export declare function injectLiveClusterCell(props: {
    txSkeleton: helpers.TransactionSkeletonType;
    clusterCell: Cell;
    config: SporeConfig;
    addOutput?: boolean;
    updateOutput?(cell: Cell): Cell;
    since?: PackedSince;
    defaultWitness?: HexString;
}): Promise<{
    txSkeleton: helpers.TransactionSkeletonType;
    inputIndex: number;
    outputIndex: number;
}>;
export declare function getClusterCellByType(clusterType: Script, config: SporeConfig): Promise<Cell>;
export declare function getClusterCellByOutPoint(clusterOutPoint: OutPoint, config: SporeConfig): Promise<Cell>;
