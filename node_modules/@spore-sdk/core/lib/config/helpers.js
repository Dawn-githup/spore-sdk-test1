"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.forkSporeConfig = exports.getSporeConfigScript = void 0;
const cloneDeep_1 = __importDefault(require("lodash/cloneDeep"));
/**
 * Get a specific Script from CNftConfig,
 * and throws an error if the script doesn't exist.
 */
function getSporeConfigScript(config, scriptName) {
    const script = config.scripts[scriptName];
    if (!script) {
        throw new Error(`${scriptName} script not defined in CNftConfig`);
    }
    return script;
}
exports.getSporeConfigScript = getSporeConfigScript;
/**
 * Clone and create a new SporeConfig.
 */
function forkSporeConfig(origin, change) {
    origin = (0, cloneDeep_1.default)(origin);
    const extensions = origin.extensions;
    if (change.extensions) {
        for (const extension of change.extensions) {
            const originExtensionIndex = extensions.findIndex((row) => {
                return row.name === extension.name && row.dataHash === extension.dataHash;
            });
            if (originExtensionIndex !== -1) {
                extensions.splice(originExtensionIndex, 1);
            }
            extensions.push(extension);
        }
    }
    const scripts = {
        ...origin.scripts,
        ...change.scripts,
    };
    return {
        ...origin,
        ...change,
        scripts,
        extensions,
    };
}
exports.forkSporeConfig = forkSporeConfig;
//# sourceMappingURL=helpers.js.map