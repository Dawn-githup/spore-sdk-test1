{"version":3,"file":"type.js","names":["FetchFlag"],"sources":["../src/type.ts"],"sourcesContent":["export type ScriptType = \"type\" | \"lock\";\n\nimport { HexNumber, Script, Transaction, Header } from \"@ckb-lumos/base\";\n\nexport enum FetchFlag {\n  Fetched = \"fetched\",\n  Fetching = \"fetching\",\n  Added = \"added\",\n  NotFound = \"not_found\",\n}\n\nexport type FetchHeaderResult =\n  | { status: FetchFlag.Fetched; data: Header }\n  | { status: FetchFlag.Fetching; firstSent: string }\n  | { status: FetchFlag.Added; timestamp: string }\n  | { status: FetchFlag.NotFound };\n\nexport type TransactionWithHeader = {\n  transaction: Transaction;\n  header: Header;\n};\n\nexport type FetchTransactionResult =\n  | { status: FetchFlag.Fetched; data: TransactionWithHeader }\n  | { status: FetchFlag.Fetching; firstSent: string }\n  | { status: FetchFlag.Added; timestamp: string }\n  | { status: FetchFlag.NotFound };\n\nexport interface LightClientTransactionList<Grouped extends boolean = false> {\n  lastCursor: string | undefined;\n  objects: LightClientTransaction<Grouped>[];\n}\n\nexport type LightClientTransaction<Goruped extends boolean = false> =\n  Goruped extends true\n    ? GroupedLightClientTransaction\n    : UngroupedLightClientTransaction;\n\nexport type HexNum = string;\nexport type IOType = \"input\" | \"output\" | \"both\";\n\nexport type UngroupedLightClientTransaction = {\n  transaction: Transaction;\n  blockNumber: HexNum;\n  ioIndex: HexNum;\n  ioType: IOType;\n  txIndex: HexNum;\n};\n\nexport type GroupedLightClientTransaction = {\n  transaction: Transaction;\n  blockNumber: HexNum;\n  txIndex: HexNum;\n  cells: Array<[IOType, HexNum]>;\n};\n\nexport type LightClientScript = {\n  script: Script;\n  blockNumber: HexNumber;\n  scriptType: ScriptType;\n};\n"],"mappings":";;;;;;IAIYA,S;;;WAAAA,S;EAAAA,S;EAAAA,S;EAAAA,S;EAAAA,S;GAAAA,S,yBAAAA,S"}