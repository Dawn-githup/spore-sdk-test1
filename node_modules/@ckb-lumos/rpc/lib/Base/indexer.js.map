{"version":3,"file":"indexer.js","names":["schemas","getIndexerTip","method","paramsFormatters","resultFormatters","resultFmts","toTip","getCells","paramsFmts","toGetCellsSearchKey","toOrder","toNumber","toOptional","toHash","toGetCellsResult","getTransactions","toGetTransactionsSearchKey","toGetTransactionsResult","getCellsCapacity","toSearchKey","toCellsCapacity","getBlockFilter","toNullable","toBlockFilter","getTransactionAndWitnessProof","toArray","toTransactionAndWitnessProof","verifyTransactionAndWitnessProof","getForkBlock","toForkBlockResult","getBlockMedianTime","estimateCycles","toRawTransaction","toEstimateCycles","getFeeRateStatistics","toFeeRateStatistics","getFeeRateStatics"],"sources":["../../src/Base/indexer.ts"],"sourcesContent":["import { formatter as paramsFmts } from \"../paramsFormatter\";\nimport * as resultFmts from \"../resultFormatter\";\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\ntype MethodSchema = {\n  method: string;\n  paramsFormatters: ((arg: any) => any)[];\n  resultFormatters: (arg: any) => any;\n};\n\nconst schemas: Record<string, MethodSchema> = {\n  getIndexerTip: {\n    method: \"get_indexer_tip\",\n    paramsFormatters: [],\n    resultFormatters: resultFmts.toTip,\n  },\n\n  getCells: {\n    method: \"get_cells\",\n    paramsFormatters: [\n      paramsFmts.toGetCellsSearchKey,\n      paramsFmts.toOrder,\n      paramsFmts.toNumber,\n      paramsFmts.toOptional(paramsFmts.toHash),\n    ],\n    resultFormatters: resultFmts.toGetCellsResult,\n  },\n\n  getTransactions: {\n    method: \"get_transactions\",\n    paramsFormatters: [\n      paramsFmts.toGetTransactionsSearchKey,\n      paramsFmts.toOrder,\n      paramsFmts.toNumber,\n      paramsFmts.toOptional(paramsFmts.toHash),\n    ],\n    resultFormatters: resultFmts.toGetTransactionsResult,\n  },\n\n  getCellsCapacity: {\n    method: \"get_cells_capacity\",\n    paramsFormatters: [paramsFmts.toSearchKey],\n    resultFormatters: resultFmts.toCellsCapacity,\n  },\n\n  getBlockFilter: {\n    method: \"get_block_filter\",\n    paramsFormatters: [paramsFmts.toHash],\n    resultFormatters: resultFmts.toNullable(resultFmts.toBlockFilter),\n  },\n  getTransactionAndWitnessProof: {\n    method: \"get_transaction_and_witness_proof\",\n    paramsFormatters: [\n      paramsFmts.toArray(paramsFmts.toHash),\n      paramsFmts.toOptional(paramsFmts.toHash),\n    ],\n    resultFormatters: resultFmts.toTransactionAndWitnessProof,\n  },\n  verifyTransactionAndWitnessProof: {\n    method: \"verify_transaction_and_witness_proof\",\n    paramsFormatters: [paramsFmts.toTransactionAndWitnessProof],\n    resultFormatters: resultFmts.toArray(resultFmts.toHash),\n  },\n\n  getForkBlock: {\n    method: \"get_fork_block\",\n    paramsFormatters: [\n      paramsFmts.toHash,\n      paramsFmts.toOptional(paramsFmts.toNumber),\n    ],\n    resultFormatters: resultFmts.toNullable(resultFmts.toForkBlockResult),\n  },\n\n  getBlockMedianTime: {\n    method: \"get_block_median_time\",\n    paramsFormatters: [paramsFmts.toHash],\n    resultFormatters: resultFmts.toNullable(resultFmts.toNumber),\n  },\n\n  estimateCycles: {\n    method: \"estimate_cycles\",\n    paramsFormatters: [paramsFmts.toRawTransaction],\n    resultFormatters: resultFmts.toEstimateCycles,\n  },\n\n  getFeeRateStatistics: {\n    method: \"get_fee_rate_statistics\",\n    paramsFormatters: [paramsFmts.toOptional(paramsFmts.toNumber)],\n    resultFormatters: resultFmts.toNullable(resultFmts.toFeeRateStatistics),\n  },\n\n  getFeeRateStatics: {\n    method: \"get_fee_rate_statics\",\n    paramsFormatters: [paramsFmts.toOptional(paramsFmts.toNumber)],\n    resultFormatters: resultFmts.toNullable(resultFmts.toFeeRateStatistics),\n  },\n};\n\nexport default schemas;\n"],"mappings":"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"}