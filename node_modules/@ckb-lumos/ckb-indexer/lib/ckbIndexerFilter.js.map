{"version":3,"file":"ckbIndexerFilter.js","names":["convertQueryOptionToLumosSearchKey","queryOptions","searchKeyLock","searchKeyType","searchKey","queryLock","lock","queryType","type","instanceOfScriptWrapper","script","scriptType","scriptSearchMode","searchMode","filter","Error","outputDataLenRange","outputCapacityRange","scriptLenRange","filterByLumosQueryOptions","cells","options","filteredCells","cell","filterByLumosSearchKey","argsLen","bytes","bytify","cellOutput","args","length","data","instanceOfDataWithSearchMode","dataSearch","equal","expectPrefix","actualPrefix","slice","isExactMode","blockchain","Script","pack","checkScriptWithPrefixMode","checkScriptLenRange","capacity","BI","from","fromCapacity","toCapacity","lt","gte","dataLen","fromDataLen","toDataLen","filterScript","codeHash","expectArgsPrefix","actualArgsPrefix","hashType","scriptLen","concat","fromScriptLen","toScriptLen","object","unwrapScriptWrapper","inputScript","unwrapDataWrapper","input"],"sources":["../src/ckbIndexerFilter.ts"],"sourcesContent":["import {\n  Cell,\n  DataWithSearchMode,\n  HexadecimalRange,\n  Script,\n  ScriptWrapper,\n  blockchain,\n} from \"@ckb-lumos/base\";\nimport { CKBIndexerQueryOptions, SearchFilter, SearchKey } from \"./type\";\nimport { bytes } from \"@ckb-lumos/codec\";\nimport { BI } from \"@ckb-lumos/bi\";\n\n/**\n * @description the following fields are not supported:\n * 1. `fromBlock` pending cells don't have block number\n * 2. `toBlock` pending cells don't have block number\n * 3. `skip` not search key, shoule be implmented in cell collector\n * 4. `order` not search key, shoule be implmented in cell collector\n */\ntype LumosQueryOptions = Pick<\n  CKBIndexerQueryOptions,\n  | \"lock\"\n  | \"type\"\n  | \"data\"\n  | \"argsLen\"\n  | \"outputDataLenRange\"\n  | \"outputCapacityRange\"\n  | \"scriptLenRange\"\n>;\n\n/**\n * @description `blockRange` is not supported, because pending cells don't have block number\n */\ntype LumosSearchFilter = Pick<\n  SearchFilter,\n  \"script\" | \"scriptLenRange\" | \"outputCapacityRange\" | \"outputDataLenRange\"\n>;\n\ntype LumosSearchKey = Pick<\n  SearchKey,\n  \"script\" | \"scriptType\" | \"scriptSearchMode\"\n> & { filter?: LumosSearchFilter };\n\nfunction convertQueryOptionToLumosSearchKey(\n  queryOptions: LumosQueryOptions\n): LumosSearchKey {\n  let searchKeyLock: Script | undefined;\n  let searchKeyType: Script | undefined;\n  let searchKey: Required<SearchKey>;\n\n  const queryLock = queryOptions.lock;\n  const queryType = queryOptions.type;\n  if (queryLock) {\n    if (instanceOfScriptWrapper(queryLock)) {\n      searchKeyLock = queryLock.script;\n    } else {\n      searchKeyLock = queryLock;\n    }\n  }\n  if (queryType && queryType !== \"empty\") {\n    if (instanceOfScriptWrapper(queryType)) {\n      searchKeyType = queryType.script;\n    } else {\n      searchKeyType = queryType;\n    }\n  }\n\n  if (searchKeyLock) {\n    searchKey = {\n      script: searchKeyLock,\n      scriptType: \"lock\",\n      scriptSearchMode: instanceOfScriptWrapper(queryLock)\n        ? queryLock.searchMode || \"prefix\"\n        : \"prefix\",\n      filter: {},\n    };\n    searchKeyType && (searchKey.filter.script = searchKeyType);\n  } else if (searchKeyType) {\n    searchKey = {\n      script: searchKeyType,\n      scriptType: \"type\",\n      scriptSearchMode: instanceOfScriptWrapper(queryType)\n        ? queryType.searchMode || \"prefix\"\n        : \"prefix\",\n      filter: {},\n    };\n  } else {\n    throw new Error(\"query.lock and query.type can't be both empty\");\n  }\n\n  const { outputDataLenRange, outputCapacityRange, scriptLenRange } =\n    queryOptions;\n\n  searchKey.filter.outputDataLenRange = outputDataLenRange;\n  searchKey.filter.outputCapacityRange = outputCapacityRange;\n  searchKey.filter.scriptLenRange = scriptLenRange;\n\n  if (queryType === \"empty\") {\n    searchKey.filter.scriptLenRange = [\"0x0\", \"0x1\"];\n  }\n\n  return searchKey;\n}\n\nfunction filterByLumosQueryOptions(\n  cells: Cell[],\n  options: LumosQueryOptions\n): Cell[] {\n  const searchKey = convertQueryOptionToLumosSearchKey(options);\n  let filteredCells = cells.filter((cell) =>\n    filterByLumosSearchKey(cell, searchKey)\n  );\n\n  if (options.argsLen && options.argsLen !== \"any\" && options.argsLen !== -1) {\n    filteredCells = filteredCells.filter(\n      (cell) =>\n        bytes.bytify(cell.cellOutput.lock.args).length === options.argsLen\n    );\n  }\n\n  if (!!options.data && options.data !== \"any\") {\n    if (\n      instanceOfDataWithSearchMode(options.data) &&\n      options.data.searchMode === \"exact\"\n    ) {\n      const dataSearch = options.data as DataWithSearchMode;\n      filteredCells = filteredCells.filter((cell) =>\n        bytes.equal(bytes.bytify(cell.data), bytes.bytify(dataSearch.data))\n      );\n    } else if (\n      instanceOfDataWithSearchMode(options.data) &&\n      options.data.searchMode === \"prefix\"\n    ) {\n      const dataSearch = options.data as DataWithSearchMode;\n      filteredCells = filteredCells.filter((cell) => {\n        const expectPrefix = bytes.bytify(dataSearch.data);\n        const actualPrefix = bytes\n          .bytify(cell.data)\n          .slice(0, expectPrefix.length);\n        return bytes.equal(expectPrefix, actualPrefix);\n      });\n    } else {\n      filteredCells = filteredCells.filter((cell) => {\n        const expectPrefix = bytes.bytify(options.data as string);\n        const actualPrefix = bytes\n          .bytify(cell.data)\n          .slice(0, expectPrefix.length);\n        return bytes.equal(expectPrefix, actualPrefix);\n      });\n    }\n  }\n\n  return filteredCells;\n}\n\n/**\n * @internal\n */\nexport function filterByLumosSearchKey(\n  cell: Cell,\n  searchKey: LumosSearchKey\n): boolean {\n  const isExactMode = searchKey.scriptSearchMode === \"exact\";\n  const { cellOutput } = cell;\n  const { scriptType, script, filter } = searchKey;\n\n  // Search mode\n  if (isExactMode) {\n    if (scriptType === \"lock\") {\n      if (\n        !bytes.equal(\n          blockchain.Script.pack(cellOutput.lock),\n          blockchain.Script.pack(script)\n        )\n      ) {\n        return false;\n      }\n    } else {\n      if (\n        !cellOutput.type ||\n        !bytes.equal(\n          blockchain.Script.pack(cellOutput.type),\n          blockchain.Script.pack(script)\n        )\n      ) {\n        return false;\n      }\n    }\n    // Prefix mode\n  } else {\n    if (scriptType === \"lock\") {\n      if (!checkScriptWithPrefixMode(cellOutput.lock, script)) {\n        return false;\n      }\n    } else {\n      if (!checkScriptWithPrefixMode(cellOutput.type, script)) {\n        return false;\n      }\n    }\n  }\n\n  // the \"exact\" mode works only on \"SearchKey.script\",\n  // not on \"SearchKey.filter.script\"\n  // the \"SearchKey.filter.script\" is always in prefix mode\n  if (!filter) return true;\n  // filter type script if scriptType is \"lock\"\n  if (scriptType === \"lock\") {\n    if (\n      filter.script &&\n      !checkScriptWithPrefixMode(cellOutput.type, filter.script)\n    ) {\n      return false;\n    }\n\n    if (\n      filter.scriptLenRange &&\n      !checkScriptLenRange(cellOutput.type, filter.scriptLenRange)\n    ) {\n      return false;\n    }\n    // filter lock script if scriptType is \"type\"\n  } else {\n    if (\n      filter.script &&\n      !checkScriptWithPrefixMode(cellOutput.lock, filter.script)\n    ) {\n      return false;\n    }\n    if (\n      filter.scriptLenRange &&\n      !checkScriptLenRange(cellOutput.lock, filter.scriptLenRange)\n    ) {\n      return false;\n    }\n  }\n\n  const { outputCapacityRange, outputDataLenRange } = filter;\n\n  if (outputCapacityRange) {\n    const capacity = BI.from(cellOutput.capacity);\n    const fromCapacity = BI.from(outputCapacityRange[0]);\n    const toCapacity = BI.from(outputCapacityRange[1]);\n    if (capacity.lt(fromCapacity) || capacity.gte(toCapacity)) {\n      return false;\n    }\n  }\n\n  if (outputDataLenRange) {\n    const dataLen = BI.from(bytes.bytify(cell.data).length);\n    const fromDataLen = BI.from(outputDataLenRange[0]);\n    const toDataLen = BI.from(outputDataLenRange[1]);\n    if (dataLen.lt(fromDataLen) || dataLen.gte(toDataLen)) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction checkScriptWithPrefixMode(\n  script: Script | undefined,\n  filterScript: Script\n): boolean {\n  if (!script) {\n    return false;\n  }\n\n  // codeHash should always be 32 bytes, so it only supports exact match mode\n  if (!bytes.equal(filterScript.codeHash, script.codeHash)) {\n    return false;\n  }\n\n  const expectArgsPrefix = bytes.bytify(filterScript.args);\n  const actualArgsPrefix = bytes\n    .bytify(script.args)\n    .slice(0, expectArgsPrefix.length);\n  if (!bytes.equal(expectArgsPrefix, actualArgsPrefix)) {\n    return false;\n  }\n\n  if (script.hashType !== filterScript.hashType) {\n    return false;\n  }\n  return true;\n}\n\nfunction checkScriptLenRange(\n  script: Script | undefined,\n  scriptLenRange: HexadecimalRange\n): boolean {\n  const scriptLen = script\n    ? BI.from(\n        bytes.concat(script.codeHash, script.args).length +\n          1 /* hashType length is 1 */\n      )\n    : BI.from(0);\n  const fromScriptLen = BI.from(scriptLenRange[0]);\n  const toScriptLen = BI.from(scriptLenRange[1]);\n  if (scriptLen.lt(fromScriptLen) || scriptLen.gte(toScriptLen)) {\n    return false;\n  }\n  return true;\n}\n\nfunction instanceOfScriptWrapper(object: unknown): object is ScriptWrapper {\n  return typeof object === \"object\" && object != null && \"script\" in object;\n}\n\nfunction instanceOfDataWithSearchMode(\n  object: unknown\n): object is DataWithSearchMode {\n  return typeof object === \"object\" && object != null && \"data\" in object;\n}\n\nconst unwrapScriptWrapper = (inputScript: ScriptWrapper | Script): Script => {\n  if (instanceOfScriptWrapper(inputScript)) {\n    return inputScript.script;\n  }\n  return inputScript;\n};\n\nconst unwrapDataWrapper = (input: DataWithSearchMode | string): string => {\n  if (instanceOfDataWithSearchMode(input)) {\n    return input.data;\n  }\n  return input;\n};\n\nexport {\n  filterByLumosQueryOptions,\n  convertQueryOptionToLumosSearchKey,\n  instanceOfDataWithSearchMode,\n  instanceOfScriptWrapper,\n  unwrapScriptWrapper,\n  unwrapDataWrapper,\n};\n"],"mappings":"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"}