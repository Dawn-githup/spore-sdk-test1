{"version":3,"file":"keystore.js","names":["UnsupportedCipher","Error","constructor","IncorrectPassword","InvalidKeystore","CIPHER","CKB_CLI_ORIGIN","Keystore","version","theCrypto","id","origin","crypto","fromJson","json","object","JSON","parse","load","path","fs","require","readFileSync","save","dir","name","filename","overwrite","Path","join","existsSync","writeFileSync","toJson","stringify","isFromCkbCli","createEmpty","salt","randomBytes","iv","kdfparams","dklen","toString","n","r","p","ciphertext","cipherparams","cipher","kdf","mac","uuid","create","extendedPrivateKey","password","options","derivedKey","Buffer","from","syncScrypt","createCipheriv","slice","concat","update","serialize","final","isEmpty","decrypt","decipher","createDecipheriv","ExtendedPrivateKey","checkPassword","Keccak","digest","scryptOptions","N","maxmem"],"sources":["../src/keystore.ts"],"sourcesContent":["import crypto from \"crypto\";\nimport { Keccak } from \"sha3\";\nimport { v4 as uuid } from \"uuid\";\nimport { ExtendedPrivateKey } from \"./extended_key\";\nimport { HexString } from \"@ckb-lumos/base\";\nimport { syncScrypt } from \"scrypt-js\";\n\nexport type HexStringWithoutPrefix = string;\n\nexport class UnsupportedCipher extends Error {\n  constructor() {\n    super(\"Unsupported cipher!\");\n  }\n}\n\nexport class IncorrectPassword extends Error {\n  constructor() {\n    super(\"Incorrect password!\");\n  }\n}\n\nexport class InvalidKeystore extends Error {\n  constructor() {\n    super(\"Invalid keystore, please check your file integrity.\");\n  }\n}\n\nconst CIPHER = \"aes-128-ctr\";\nconst CKB_CLI_ORIGIN = \"ckb-cli\";\n\ninterface CipherParams {\n  iv: HexStringWithoutPrefix;\n}\n\ninterface KdfParams {\n  dklen: number;\n  n: number;\n  r: number;\n  p: number;\n  salt: HexStringWithoutPrefix;\n}\n\ninterface Crypto {\n  cipher: string;\n  cipherparams: CipherParams;\n  ciphertext: HexStringWithoutPrefix;\n  kdf: string;\n  kdfparams: KdfParams;\n  mac: HexStringWithoutPrefix;\n}\n\n// Encrypt and save master extended private key.\nexport default class Keystore {\n  crypto: Crypto;\n  id: string;\n  version = 3;\n  origin: string | undefined;\n\n  constructor(theCrypto: Crypto, id: string, origin?: string) {\n    this.crypto = theCrypto;\n    this.id = id;\n    this.origin = origin;\n  }\n\n  static fromJson(json: string): Keystore {\n    try {\n      const object = JSON.parse(json);\n      return new Keystore(object.crypto, object.id, object.origin);\n    } catch {\n      throw new InvalidKeystore();\n    }\n  }\n\n  /**\n   * @deprecated\n   * Load keystore file from path.\n   *\n   * @param path\n   */\n  static load(path: string): Keystore {\n    // eslint-disable-next-line @typescript-eslint/no-var-requires\n    const fs = require(\"fs\");\n    const json = fs.readFileSync(path, \"utf-8\");\n    return this.fromJson(json);\n  }\n\n  /**\n   * @deprecated\n   * Keystore file default name is `${id}.json`.\n   *\n   * @param dir\n   * @param options If you are sure to overwrite existing keystore file, set `overwrite` to true.\n   */\n  save(\n    dir: string,\n    {\n      name = this.filename(),\n      overwrite = false,\n    }: { name?: string; overwrite?: boolean } = {}\n  ): void {\n    // eslint-disable-next-line @typescript-eslint/no-var-requires\n    const fs = require(\"fs\");\n    // eslint-disable-next-line @typescript-eslint/no-var-requires\n    const Path = require(\"path\");\n    const path: string = Path.join(dir, name);\n    if (!overwrite && fs.existsSync(path)) {\n      throw new Error(\"Keystore file already exists!\");\n    }\n    fs.writeFileSync(path, this.toJson());\n  }\n\n  private filename(): string {\n    return this.id + \".json\";\n  }\n\n  toJson(): string {\n    return JSON.stringify(this);\n  }\n\n  isFromCkbCli(): boolean {\n    return this.origin === CKB_CLI_ORIGIN;\n  }\n\n  // Create an empty keystore object that contains empty private key\n  static createEmpty(): Keystore {\n    const salt: Buffer = crypto.randomBytes(32);\n    const iv: Buffer = crypto.randomBytes(16);\n    const kdfparams: KdfParams = {\n      dklen: 32,\n      salt: salt.toString(\"hex\"),\n      n: 2 ** 18,\n      r: 8,\n      p: 1,\n    };\n    return new Keystore(\n      {\n        ciphertext: \"\",\n        cipherparams: {\n          iv: iv.toString(\"hex\"),\n        },\n        cipher: CIPHER,\n        kdf: \"scrypt\",\n        kdfparams,\n        mac: \"\",\n      },\n      uuid()\n    );\n  }\n\n  static create(\n    extendedPrivateKey: ExtendedPrivateKey,\n    password: string,\n    options: { salt?: Buffer; iv?: Buffer } = {}\n  ): Keystore {\n    const salt: Buffer = options.salt || crypto.randomBytes(32);\n    const iv: Buffer = options.iv || crypto.randomBytes(16);\n    const kdfparams: KdfParams = {\n      dklen: 32,\n      salt: salt.toString(\"hex\"),\n      n: 2 ** 18,\n      r: 8,\n      p: 1,\n    };\n    const derivedKey: Buffer = Buffer.from(\n      syncScrypt(\n        Buffer.from(password),\n        salt,\n        kdfparams.n,\n        kdfparams.r,\n        kdfparams.p,\n        kdfparams.dklen\n      )\n    );\n\n    const cipher: crypto.Cipher = crypto.createCipheriv(\n      CIPHER,\n      derivedKey.slice(0, 16),\n      iv\n    );\n    if (!cipher) {\n      throw new UnsupportedCipher();\n    }\n    const ciphertext: Buffer = Buffer.concat([\n      cipher.update(\n        Buffer.from(extendedPrivateKey.serialize().slice(2), \"hex\")\n      ),\n      cipher.final(),\n    ]);\n\n    return new Keystore(\n      {\n        ciphertext: ciphertext.toString(\"hex\"),\n        cipherparams: {\n          iv: iv.toString(\"hex\"),\n        },\n        cipher: CIPHER,\n        kdf: \"scrypt\",\n        kdfparams,\n        mac: Keystore.mac(derivedKey, ciphertext),\n      },\n      uuid()\n    );\n  }\n\n  // Imported from xpub with empty private key.\n  isEmpty(): boolean {\n    return this.crypto.ciphertext === \"\" && this.crypto.mac === \"\";\n  }\n\n  // Decrypt and return serialized extended private key.\n  decrypt(password: string): HexString {\n    const derivedKey = this.derivedKey(password);\n    const ciphertext = Buffer.from(this.crypto.ciphertext, \"hex\");\n    if (Keystore.mac(derivedKey, ciphertext) !== this.crypto.mac) {\n      throw new IncorrectPassword();\n    }\n    const decipher = crypto.createDecipheriv(\n      this.crypto.cipher,\n      derivedKey.slice(0, 16),\n      Buffer.from(this.crypto.cipherparams.iv, \"hex\")\n    );\n    return (\n      \"0x\" +\n      Buffer.concat([decipher.update(ciphertext), decipher.final()]).toString(\n        \"hex\"\n      )\n    );\n  }\n\n  extendedPrivateKey(password: string): ExtendedPrivateKey {\n    return ExtendedPrivateKey.parse(this.decrypt(password));\n  }\n\n  checkPassword(password: string): boolean {\n    const derivedKey = this.derivedKey(password);\n    const ciphertext = Buffer.from(this.crypto.ciphertext, \"hex\");\n    return Keystore.mac(derivedKey, ciphertext) === this.crypto.mac;\n  }\n\n  derivedKey(password: string): Buffer {\n    const { kdfparams } = this.crypto;\n    return Buffer.from(\n      syncScrypt(\n        Buffer.from(password),\n        Buffer.from(kdfparams.salt, \"hex\"),\n        kdfparams.n,\n        kdfparams.r,\n        kdfparams.p,\n        kdfparams.dklen\n      )\n    );\n  }\n\n  static mac(derivedKey: Buffer, ciphertext: Buffer): HexStringWithoutPrefix {\n    return new Keccak(256)\n      .update(Buffer.concat([derivedKey.slice(16, 32), ciphertext]))\n      .digest(\"hex\");\n  }\n\n  static scryptOptions(kdfparams: KdfParams): crypto.ScryptOptions {\n    return {\n      N: kdfparams.n,\n      r: kdfparams.r,\n      p: kdfparams.p,\n      maxmem: 128 * (kdfparams.n + kdfparams.p + 2) * kdfparams.r,\n    };\n  }\n}\n"],"mappings":"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"}